"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/daily-summary";
exports.ids = ["pages/api/daily-summary"];
exports.modules = {

/***/ "(api-node)/./lib/shopify.js":
/*!************************!*\
  !*** ./lib/shopify.js ***!
  \************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// lib/shopify.js\n\nconst fetch = __webpack_require__(/*! node-fetch */ \"node-fetch\");\nconst SHOP = process.env.SHOPIFY_STORE;\nconst TOKEN = process.env.SHOPIFY_ADMIN_TOKEN;\nconst API_VER = process.env.SHOPIFY_API_VERSION || '2025-07';\nif (!SHOP || !TOKEN) {\n    console.error('Missing SHOPIFY_STORE or SHOPIFY_ADMIN_TOKEN in env');\n}\nconst BASE = `https://${SHOP}/admin/api/${API_VER}`;\nasync function shopifyGet(path) {\n    const url = `${BASE}${path}`;\n    const res = await fetch(url, {\n        headers: {\n            'X-Shopify-Access-Token': TOKEN,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    });\n    if (!res.ok) {\n        const txt = await res.text();\n        throw new Error(`Shopify error ${res.status}: ${txt}`);\n    }\n    return res.json();\n}\nmodule.exports = {\n    shopifyGet\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL2xpYi9zaG9waWZ5LmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjs7QUFDakIsTUFBTUEsUUFBUUMsbUJBQU9BLENBQUMsOEJBQVk7QUFFbEMsTUFBTUMsT0FBT0MsUUFBUUMsR0FBRyxDQUFDQyxhQUFhO0FBQ3RDLE1BQU1DLFFBQVFILFFBQVFDLEdBQUcsQ0FBQ0csbUJBQW1CO0FBQzdDLE1BQU1DLFVBQVVMLFFBQVFDLEdBQUcsQ0FBQ0ssbUJBQW1CLElBQUk7QUFFbkQsSUFBSSxDQUFDUCxRQUFRLENBQUNJLE9BQU87SUFDbkJJLFFBQVFDLEtBQUssQ0FBQztBQUNoQjtBQUVBLE1BQU1DLE9BQU8sQ0FBQyxRQUFRLEVBQUVWLEtBQUssV0FBVyxFQUFFTSxTQUFTO0FBRW5ELGVBQWVLLFdBQVdDLElBQUk7SUFDNUIsTUFBTUMsTUFBTSxHQUFHSCxPQUFPRSxNQUFNO0lBQzVCLE1BQU1FLE1BQU0sTUFBTWhCLE1BQU1lLEtBQUs7UUFDM0JFLFNBQVM7WUFDUCwwQkFBMEJYO1lBQzFCLGdCQUFnQjtZQUNoQixVQUFVO1FBQ1o7SUFDRjtJQUNBLElBQUksQ0FBQ1UsSUFBSUUsRUFBRSxFQUFFO1FBQ1gsTUFBTUMsTUFBTSxNQUFNSCxJQUFJSSxJQUFJO1FBQzFCLE1BQU0sSUFBSUMsTUFBTSxDQUFDLGNBQWMsRUFBRUwsSUFBSU0sTUFBTSxDQUFDLEVBQUUsRUFBRUgsS0FBSztJQUN2RDtJQUNBLE9BQU9ILElBQUlPLElBQUk7QUFDakI7QUFFQUMsT0FBT0MsT0FBTyxHQUFHO0lBQUVaO0FBQVciLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmtpdGpvc2hpL0RvY3VtZW50cy9NZXJjaGFudC1DaGF0Ym90L2xpYi9zaG9waWZ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGxpYi9zaG9waWZ5LmpzXG5jb25zdCBmZXRjaCA9IHJlcXVpcmUoJ25vZGUtZmV0Y2gnKTtcblxuY29uc3QgU0hPUCA9IHByb2Nlc3MuZW52LlNIT1BJRllfU1RPUkU7XG5jb25zdCBUT0tFTiA9IHByb2Nlc3MuZW52LlNIT1BJRllfQURNSU5fVE9LRU47XG5jb25zdCBBUElfVkVSID0gcHJvY2Vzcy5lbnYuU0hPUElGWV9BUElfVkVSU0lPTiB8fCAnMjAyNS0wNyc7XG5cbmlmICghU0hPUCB8fCAhVE9LRU4pIHtcbiAgY29uc29sZS5lcnJvcignTWlzc2luZyBTSE9QSUZZX1NUT1JFIG9yIFNIT1BJRllfQURNSU5fVE9LRU4gaW4gZW52Jyk7XG59XG5cbmNvbnN0IEJBU0UgPSBgaHR0cHM6Ly8ke1NIT1B9L2FkbWluL2FwaS8ke0FQSV9WRVJ9YDtcblxuYXN5bmMgZnVuY3Rpb24gc2hvcGlmeUdldChwYXRoKSB7XG4gIGNvbnN0IHVybCA9IGAke0JBU0V9JHtwYXRofWA7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgIGhlYWRlcnM6IHtcbiAgICAgICdYLVNob3BpZnktQWNjZXNzLVRva2VuJzogVE9LRU4sXG4gICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgIH1cbiAgfSk7XG4gIGlmICghcmVzLm9rKSB7XG4gICAgY29uc3QgdHh0ID0gYXdhaXQgcmVzLnRleHQoKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFNob3BpZnkgZXJyb3IgJHtyZXMuc3RhdHVzfTogJHt0eHR9YCk7XG4gIH1cbiAgcmV0dXJuIHJlcy5qc29uKCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0geyBzaG9waWZ5R2V0IH07XG4iXSwibmFtZXMiOlsiZmV0Y2giLCJyZXF1aXJlIiwiU0hPUCIsInByb2Nlc3MiLCJlbnYiLCJTSE9QSUZZX1NUT1JFIiwiVE9LRU4iLCJTSE9QSUZZX0FETUlOX1RPS0VOIiwiQVBJX1ZFUiIsIlNIT1BJRllfQVBJX1ZFUlNJT04iLCJjb25zb2xlIiwiZXJyb3IiLCJCQVNFIiwic2hvcGlmeUdldCIsInBhdGgiLCJ1cmwiLCJyZXMiLCJoZWFkZXJzIiwib2siLCJ0eHQiLCJ0ZXh0IiwiRXJyb3IiLCJzdGF0dXMiLCJqc29uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./lib/shopify.js\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdaily-summary&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fdaily-summary.js&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdaily-summary&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fdaily-summary.js&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_daily_summary_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/api/daily-summary.js */ \"(api-node)/./pages/api/daily-summary.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_daily_summary_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_daily_summary_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/daily-summary\",\n        pathname: \"/api/daily-summary\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_daily_summary_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/daily-summary\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: [],\n                multiZoneDraftMode: Boolean(false),\n                trustHostHeader: false,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/daily-summary\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdaily-summary&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fdaily-summary.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/daily-summary.js":
/*!************************************!*\
  !*** ./pages/api/daily-summary.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// pages/api/daily-summary.js\nconst { shopifyGet } = __webpack_require__(/*! ../../lib/shopify */ \"(api-node)/./lib/shopify.js\");\nasync function getSalesToday() {\n    const now = new Date();\n    const start = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const end = new Date(start.getTime() + 24 * 60 * 60 * 1000 - 1);\n    const startISO = start.toISOString();\n    const endISO = end.toISOString();\n    const path = `/orders.json?status=any&created_at_min=${encodeURIComponent(startISO)}&created_at_max=${encodeURIComponent(endISO)}&limit=250&fields=id,total_price,financial_status,fulfillment_status`;\n    const data = await shopifyGet(path);\n    const orders = data.orders || [];\n    const total = orders.reduce((s, o)=>s + parseFloat(o.total_price || 0), 0);\n    const cancelled = orders.filter((o)=>o.cancelled_at).length || 0;\n    const pending = orders.filter((o)=>o.fulfillment_status === null || o.fulfillment_status === 'unfulfilled').length;\n    return {\n        orders_count: orders.length,\n        total_amount: total,\n        cancelled,\n        pending\n    };\n}\nasync function getOutOfStockCount() {\n    let since_id = 0;\n    let outCount = 0;\n    while(true){\n        const path = `/products.json?limit=250&since_id=${since_id}&fields=id,variants`;\n        const data = await shopifyGet(path);\n        const products = data.products || [];\n        if (!products.length) break;\n        for (const p of products){\n            for (const v of p.variants){\n                if (Number(v.inventory_quantity || 0) <= 0) outCount++;\n            }\n        }\n        since_id = products[products.length - 1].id;\n        if (products.length < 250) break;\n    }\n    return outCount;\n}\nasync function getNewCustomersToday() {\n    const now = new Date();\n    const start = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const end = new Date(start.getTime() + 24 * 60 * 60 * 1000 - 1);\n    const path = `/customers/count.json?created_at_min=${encodeURIComponent(start.toISOString())}&created_at_max=${encodeURIComponent(end.toISOString())}`;\n    const data = await shopifyGet(path);\n    return data.count || 0;\n}\nasync function getAbandonedCountToday() {\n    try {\n        const now = new Date();\n        const start = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        const path = `/checkouts.json?created_at_min=${encodeURIComponent(start.toISOString())}&limit=250`;\n        const data = await shopifyGet(path);\n        const checkouts = data.checkouts || [];\n        // checkouts API returns active checkouts; we treat all as abandoned unless they have completed order linked (hard to deduce here)\n        return {\n            count: checkouts.length,\n            value: checkouts.reduce((s, c)=>s + parseFloat(c.subtotal_price || 0), 0)\n        };\n    } catch (e) {\n        // If merchant's store lacks permission, don't fail the whole summary\n        return {\n            count: 0,\n            value: 0\n        };\n    }\n}\nasync function handler(req, res) {\n    try {\n        const [sales, outCount, newCustomers, abandoned] = await Promise.all([\n            getSalesToday(),\n            getOutOfStockCount(),\n            getNewCustomersToday(),\n            getAbandonedCountToday()\n        ]);\n        res.status(200).json({\n            date: new Date().toISOString().slice(0, 10),\n            sales,\n            products: {\n                out_of_stock_count: outCount\n            },\n            customers: {\n                new_today: newCustomers\n            },\n            abandoned_checkouts: abandoned\n        });\n    } catch (err) {\n        res.status(500).json({\n            error: err.message\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/daily-summary.js\n");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "node-fetch":
/*!*****************************!*\
  !*** external "node-fetch" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("node-fetch");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fdaily-summary&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fdaily-summary.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();